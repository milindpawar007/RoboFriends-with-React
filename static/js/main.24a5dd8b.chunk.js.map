{"version":3,"sources":["Card.js","CardList.js","Searchbox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","useState","setrobots","setrsearchfield","useEffect","fetch","then","response","json","filterRobots","filter","toLowerCase","includes","length","event","target","value","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6LAgBeA,EAdJ,SAAC,GACX,IADYC,EACb,EADaA,KAAMC,EACnB,EADmBA,MAAMC,EACzB,EADyBA,GAErB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAK,OAAOC,IAAG,gCAA2BH,EAA3B,eACpB,gCACI,+BAAKF,EAAL,OACA,4BAAIC,WCcLK,EApBA,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACX,OACC,8BAGIA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OAAS,cAAC,EAAD,CAETR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHZS,SCCFC,EATC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC3B,OACI,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAC9EC,SAAUH,OCKJI,G,MATF,SAACC,GACV,OACG,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACKJ,EAAMK,aCoCHC,MA/Bf,WAAkB,IAAD,EAEgBC,mBAAS,IAFzB,mBAELlB,EAFK,KAEImB,EAFJ,OAG2BD,mBAAS,IAHpC,mBAGLb,EAHK,KAGSe,EAHT,KAKbC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAArB,GAAQiB,EAAUjB,QAC1B,IAEF,IAEMwB,EAAc1B,EAAO2B,QAAO,SAAA3B,GAC9B,OAAOA,EAAOP,KAAKmC,cAAcC,SAASxB,EAAYuB,kBAEtD,OAAmB,IAAhB5B,EAAO8B,OACC,yCAGH,sBAAKlC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAXD,SAACyB,GAAWX,EAAiBW,EAAMC,OAAOC,UAYpD,cAAC,EAAD,UACA,cAACC,EAAD,CAAUlC,OAAQ0B,UCtBnBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,SAKpDX,K","file":"static/js/main.24a5dd8b.chunk.js","sourcesContent":["import React from  'react';\r\n\r\nconst Card=({name ,email,id})=>\r\n{ \r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robo' src={`https://robohash.org//${id}$?200x200`}/> \r\n            <div> \r\n                <h2>{name} </h2>\r\n                <p>{email }</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist=( {robots} )=> {\r\n       return  (\r\n        <div> \r\n        {\r\n\r\n            robots.map((user,i )=>{\r\n            return ( <Card\r\n            key={i} \r\n            id={robots[i].id}\r\n            name ={robots[i].name}\r\n            email={robots[i].email}/> \r\n            );\r\n         })\r\n        }   \r\n         </div>\r\n\r\n    )\r\n    ;\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox=({searchfield ,searchChange})=>{\r\n    return(\r\n        <div className='pa2'>\r\n         <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Serach Robots'\r\n         onChange={searchChange}/>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react'\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n       <div style={{overflow:'scroll',border:'5px solid black',height:'800px'}}>\r\n           {props.children}\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React ,{useState,useEffect  } from 'react';\r\nimport CardList from './CardList';\r\nimport Searchbox from './Searchbox';\r\n// import {robots} from './robots';\r\n// import { render } from '@testing-library/react';\r\nimport './App.css';\r\nimport Scroll from './Scroll'\r\n\r\n\r\n\r\nfunction  App()  {\r\n    \r\n    const  [robots , setrobots]= useState([]);\r\n    const  [searchfield , setrsearchfield]= useState('');\r\n\r\n    useEffect(()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>  response.json())\r\n        .then(user=> {setrobots(user)});\r\n    },[])\r\n\r\n    const onSearchChange =(event)=>{  setrsearchfield( event.target.value)}\r\n\r\n    const filterRobots =robots.filter(robots=>{\r\n        return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(robots.length===0){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n            return(\r\n                <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <Searchbox searchChange={onSearchChange}/>\r\n                <Scroll>\r\n                <CardList robots={filterRobots} /> \r\n                </Scroll>\r\n                </div>\r\n            )\r\n        }}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './App'\n// import CardList from './CardList'\nimport reportWebVitals from './reportWebVitals';\n// import {robots} from './robots';\n\nReactDOM.render(<App/>  ,   document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}